  ABINIT 9.10.3
  
-instrng: 75 lines of input have been read from file mos2.abi
 

.Version 9.10.3 of ABINIT 
.(MPI version, prepared for a x86_64_linux_intel2021.6 computer) 

.Copyright (C) 1998-2022 ABINIT group . 
 ABINIT comes with ABSOLUTELY NO WARRANTY.
 It is free software, and you are welcome to redistribute it
 under certain conditions (GNU General Public License,
 see ~abinit/COPYING or http://www.gnu.org/copyleft/gpl.txt).

 ABINIT is a project of the Universite Catholique de Louvain,
 Corning Inc. and other collaborators, see ~abinit/doc/developers/contributors.txt .
 Please read https://docs.abinit.org/theory/acknowledgments for suggested
 acknowledgments of the ABINIT effort.
 For more information, see https://www.abinit.org .

.Starting date : Thu  1 May 2025.
- ( at 14h06 )
  
 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
 === Build Information === 
  Version       : 9.10.3
  Build target  : x86_64_linux_intel2021.6
  Build date    : 20240126
 
 === Compiler Suite === 
  C compiler       : intel2021.6
  C++ compiler     : gnu2021.6
  Fortran compiler : intel2021.6
  CFLAGS           : -g -O2
  CXXFLAGS         : -g -O2 -mtune=native -march=native
  FCFLAGS          : -g -extend-source -nofpscomp     -I/shared/ucl/apps/NetCDF/4.9.2-in ...
  FC_LDFLAGS       :   -static-intel -static-libgcc
 
 === Optimizations === 
  Debug level        : basic
  Optimization level : standard
  Architecture       : intel_xeon
 
 === Multicore === 
  Parallel build : /shared/ucl/apps/intel/2020/impi/2019.6.166/intel64
  Parallel I/O   : 
  openMP support : 
  GPU support    : 
 
 === Connectors / Fallbacks === 
  LINALG flavor  : mkl
  FFT flavor     : dfti
  HDF5           : yes
  NetCDF         : yes
  NetCDF Fortran : yes
  LibXC          : yes
  Wannier90      : no
 
 === Experimental features === 
  Exports             : 
  GW double-precision : 
 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Default optimizations:
   -O3


 Optimizations for 43_ptgroups:
   -O0


 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 CPP options activated during the build:

                  CC_INTEL                   CXX_GNU                  FC_INTEL
 
                 HAVE_DFTI HAVE_FC_ALLOCATABLE_DT...             HAVE_FC_ASYNC
 
  HAVE_FC_COMMAND_ARGUMENT      HAVE_FC_COMMAND_LINE        HAVE_FC_CONTIGUOUS
 
           HAVE_FC_CPUTIME              HAVE_FC_EXIT             HAVE_FC_FLUSH
 
             HAVE_FC_GAMMA   HAVE_FC_IEEE_ARITHMETIC   HAVE_FC_IEEE_EXCEPTIONS
 
             HAVE_FC_IOMSG     HAVE_FC_ISO_C_BINDING  HAVE_FC_ISO_FORTRAN_2008
 
        HAVE_FC_LONG_LINES        HAVE_FC_MOVE_ALLOC  HAVE_FC_ON_THE_FLY_SHAPE
 
           HAVE_FC_PRIVATE         HAVE_FC_PROTECTED           HAVE_FC_SHIFTLR
 
         HAVE_FC_STREAM_IO                 HAVE_HDF5             HAVE_HDF5_MPI
 
        HAVE_LIBPAW_ABINIT      HAVE_LIBTETRA_ABINIT                HAVE_LIBXC
 
         HAVE_LINALG_AXPBY        HAVE_LINALG_GEMM3M         HAVE_LINALG_GEMMT
 
  HAVE_LINALG_MKL_IMATCOPY   HAVE_LINALG_MKL_OMATADD  HAVE_LINALG_MKL_OMATCOPY
 
   HAVE_LINALG_MKL_THREADS     HAVE_LINALG_SCALAPACK                  HAVE_MPI
 
                 HAVE_MPI2       HAVE_MPI_IALLGATHER       HAVE_MPI_IALLREDUCE
 
        HAVE_MPI_IALLTOALL       HAVE_MPI_IALLTOALLV           HAVE_MPI_IBCAST
 
         HAVE_MPI_IGATHERV        HAVE_MPI_INTEGER16               HAVE_MPI_IO
 
 HAVE_MPI_TYPE_CREATE_S...               HAVE_NETCDF       HAVE_NETCDF_FORTRAN
 
   HAVE_NETCDF_FORTRAN_MPI           HAVE_NETCDF_MPI             HAVE_OS_LINUX
 
         HAVE_TIMER_ABINIT                                                      
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- input  file    -> mos2.abi
- output file    -> mos2.abo
- root for input  files -> mos2i
- root for output files -> mos2o
 
 Netcdf library supports MPI-IO
-instrng: 75 lines of input have been read from file mos2.abi
 
 For atom type 1, psp file is ./persudo/Mo.psp8
 For atom type 2, psp file is ./persudo/S.psp8
  read the values zionpsp= 14.0 , pspcod=   8 , lmax=   2
  read the values zionpsp=  6.0 , pspcod=   8 , lmax=   2
 
 inpspheads: deduce mpsang = 3, n1xccc = 2501.

======================================================= 
 invars1m : enter jdtset= 0
 
--- !WARNING
src_file: m_parser.F90
src_line: 421
message: |
    Attempted to read ndig: 10 floating point digits,
    from string(1:ndig): `SQRT(3)/2,` to initialize a floating variable.
    iomsg: list-directed I/O syntax error, unit -5, file Internal List-Directed Read
...
 
 
--- !ERROR
src_file: m_parser.F90
src_line: 2054
mpi_rank: 0
message: |
    An error occurred reading data for keyword ` RPRIM`,
    looking for 9 elements.
    There is a problem with the input string:
     SQRT(3)/2, 0 0.5 -SQRT(3)/2 0 0 0 1 NTYPAT 2 ZNUCL 42 16 PP_DIRPATH "./persudo/" PSEUDOS "Mo.psp8, S.psp8" NATOM 3 TYPAT 1 2 2 XRED 1/3 2/3 0.0 2/3 1/3 -0.0919442350 2/3 1/3 0.0919442350 ECUT 12.0 KPTOPT 1 NGKPT 2 2 2 NSHIFTK 4 SHIFTK 0.5 0.5 0.5 0.5 0.0 0.0 0.0 0.5 0.0 0.0 0.0 0.5 NSTEP 10 TOLDFE 1.0D-6 DIEMAC 12.0
    Maybe a disagreement between the declared dimension of the array,
    and the number of items provided. 
    Action: correct your input file and especially the keyword:  RPRIM
...
 
 
 abinit_abort: decision taken to exit. Check above messages for more info
